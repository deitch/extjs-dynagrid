<?xml version="1.0"?>
<!-- build file for dyna-grid project -->
<!-- Created by: Avi Deitcher &lt;avi@jsorm.com&gt;  -->

<project name="dyna-grid" default="all" basedir=".">
  <property name="src" value="./src"/>
  <property name="build" value="./build"/>
  <property name="dist" value="./dist"/>
  <property name="sample" value="./sample"/>
  <property name="compile.debug"       value="true"/>

  <property name="version" value="0.9"/>

<taskdef name="jsmin"
        classname="net.matthaynes.jsmin.JSMin_Task"
        classpath="/Library/Java/lib/jsmin.0.2.2a.jar"/>

<!-- <scriptdef name="jslint"
        src="/Users/adeitcher/Documents/Development/js/jslint/jslintant.js"
        language="javascript">
    <attribute name="options"/>
    <element name="fileset" type="fileset"/>
</scriptdef> -->


<!-- 
Build all Java source files into destdir.  This is common in Java
projects: the compile target is trivial, since it just says to build
everything.  Fancier compiler targets are easy if you want to build
just one file at a time.
 -->
	<target name="cleanbuild" depends="clean,build">
	</target>
	
    <target name="build" depends="init">
		<!-- combine the files into build/ and minify -->
		<concat destfile="${build}/${ant.project.name}-src.js">
			<fileset dir="${src}" includes="*.js"/>
		</concat>
		<jsmin destdir="${build}" srcfile="${build}/${ant.project.name}-src.js" destfile="${ant.project.name}-min.js">
		</jsmin>	
		<concat destfile="${build}/${ant.project.name}.js">
			<fileset file="${src}/00license.js"/>
			<fileset file="${build}/${ant.project.name}-min.js"/>
		</concat>
		<delete file="${build}/${ant.project.name}-min.js"/>

		<!-- include version in file -->
		<replace file="${build}/${ant.project.name}.js" token="@@version@@" value="${version}"/>		
		<replace file="${build}/${ant.project.name}-src.js" token="@@version@@" value="${version}"/>		

		<!-- include files in sample directory -->
		<copy file="${build}/${ant.project.name}.js" todir="${sample}"/>	
		<copy file="${build}/${ant.project.name}-src.js" todir="${sample}"/>	
    </target>

	<target name="dist" depends="build">
		<!-- zip together the relevant files build/, README.txt, sample/ -->
		<zip destfile="${dist}/${ant.project.name}-${version}.zip">
			<fileset dir="${build}"/>
			<fileset dir="." includes="README.txt"/>
 			<fileset dir="." includes="license.txt"/>
		</zip>
	</target>

	<target name="all" depends="dist">
			
	</target>

	<target name="test">
		<jslint options="{passfail: false, browser: true}">
			<fileset dir="${src}" includes="*.js" excludes="SecureStore.js"/>
		</jslint>
	</target>

	
	
<!--
init is a target that sets things up for the build.  Since we use the
built-in ant function mkdir, it will only make the directory if it
does not already exist.
-->
  <target name="init">
    <mkdir dir="${build}"/>
	<mkdir dir="${dist}"/>
  </target>


<!--
Always include a clean target to get rid of all the extra files
created by the build process, so you can save storage safely, without
thinking.  Also: sometimes you'll want to do a completely fresh build,
such as when changing to a new version of the JDK.
-->
  <target name="clean" description="Removes previous build">
    <delete verbose="true">
		<fileset dir="${build}"/>
	    <fileset dir="${dist}"/>
	</delete>
  </target>

</project>

